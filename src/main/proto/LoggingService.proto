syntax = "proto3";

option java_multiple_files = true;
option java_package = "edu.ucsc.loggingservice";
option java_outer_classname = "LoggingServiceProto";
option objc_class_prefix = "LGS";

package helloworld;

// The greeting service definition.
service LoggingService {
    // Sends a greeting
    rpc SayHello (HelloRequest) returns (HelloReply) {};
    rpc CreateTag (CreateTagRequest) returns (CreateTagResponse) {};
    rpc UpdateTag (UpdateTagRequest) returns (UpdateTagResponse) {};
    rpc DeleteTag (DeleteTagRequest) returns (DeleteTagResponse) {};
    rpc CreateLog (CreateLogRequest) returns (CreateLogResponse) {};
    rpc GetLedger (GetLedgerRequest) returns (GetLedgerResponse) {};
    rpc GetLogEntry (GetLogEntryRequest) returns (GetLogEntryResponse) {};
    rpc VerifyLedger (VerifyLedgerRequest) returns (VerifyLedgerResponse) {};
    rpc VerifyLog (VerifyLogRequest) returns (VerifyLogResponse) {};
}

message LogEntry{
    string key = 1;
    string timestamp = 2;
    string value = 3;
    string digest = 4;
    repeated string tags = 5;
}

message Tag{
    string name = 1;
    string digest  = 2;
    repeated AccessInfo accessInfo = 3;
}

message AccessInfo{
    string name = 1;
    bool write = 2;
    bool modify = 3;
    bool read = 4;
    bool verify = 5;
}

message AccessControlList{
    string key = 1;
}

message ResponseStatus{
    int32 code = 1;
    string statusCode = 2;
}

// The request message containing the user's name.
message HelloRequest {
    string name = 1;
}
// The response message containing the greetings
message HelloReply {
    string message = 1;
}

message CreateTagRequest {
    Tag newTag = 1;
}
message CreateTagResponse {
    bool success = 1;
    ResponseStatus status = 2;
}

message UpdateTagRequest {
    Tag updatedTag = 1;
}
message UpdateTagResponse {
    bool success = 1;
    ResponseStatus status = 2;
}

message DeleteTagRequest {
    string name = 1;
}
message DeleteTagResponse {
    bool success = 1;
    ResponseStatus status = 2;
}

message CreateLogRequest {
    LogEntry log = 1;
}
message CreateLogResponse {
    bool success = 1;
    ResponseStatus status = 2;
}

message GetLedgerRequest {
    string tag = 1;
}
message GetLedgerResponse {
    repeated LogEntry logs = 1;
    ResponseStatus status = 2;
}

message GetLogEntryRequest{
    string key = 1;
    string tag = 2;
}
message GetLogEntryResponse {
    LogEntry log = 1;
    ResponseStatus status = 2;
}

message VerifyLedgerRequest {
    string tag = 1;
}
message VerifyLedgerResponse {
    string digest = 1;
    ResponseStatus status = 2;
}

message VerifyLogRequest {
    string key = 1;
    string tag = 2;
}
message VerifyLogResponse {
    string digest = 1;
    ResponseStatus status = 2;
}
